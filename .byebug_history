exit
@parking2
exit
@parking2
c
exit
@parking2
exit
Parking.num_cars
Parking
parking
@parking
@parking2
c
@parking2
exit
@parking
exit
parking
Parking.num_cars
Parking
parking.num_cars
parking
@parking
parking
byebug
input
exit
@parking
exit
puts @parking
pp @parking
p @parking
exit
Parking.num_cars
Parking
pakr
d
@parking
input
exit
@parking
Parking
parking
@parking
exit
input
exit
$stdout
input
@parking
@parking.slots
@parking
@parking.num_cars
@parking
Parking
parking
@parking
c
exit
Parking.num_cars
Parking
@parking
c
exit
$stdout
exit
input
exit
input
input = "hah"
input
exit
Parking.num_cars
@parking
q
input
exit
input
puts "aa" if Parking.num_cars == 0
Parking.num_cars == 0
Parking.num_cars
Parking.num_car
Parking.num_cars
Parking
q
Parking.num_cars
Parking
@parking
@parking.slots
@parking
@parking.process_input(["status"])
@parking.num_cars
@parking
q
@parking.num_cars
@parking
parking
q
input
c
q
c
@slots
c
status
c
index
@slots
c
@slots
c
q
@q
@slots.size
@slots
c
@slots
c
q
@slots
c
@slots
c
q
create_parking_lot 10
q
@slots
c
@slots.size
@slots
@@num_cars
c
@@num_cars
@slots
c
@@num_cars
@slots
c
@slots.size
@slots
c
@slots
c
@slots
c
@slots
c
@slots
c
@slots
c
@slots
q
@slots
slot
c
@slots
q
@slots
c
@slots
argv_arr
c
q
c
argv_arr
c
argv_arr
exit
c
argv_arr
c
input
c
input
c
@slots
c
@cards
num_slots
action
actino
@slots.size
@slots
